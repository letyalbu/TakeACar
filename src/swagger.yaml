openapi: 3.0.0
info: 
  title: TakeACar Documentation
  description: This is an API to manage **Car Rentals**.
  version: 1.0.0

paths:
  /categories:
    post:
      tags: 
        - Category
      summary: Create a new category
      description: >
        Create a new car category. 
        Must be authenticated and an admin user.
      security: 
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            examples: 
              Sedan:
                $ref: '#definitions/examples/Category/Sedan'
              SUV:
                $ref: '#definitions/examples/Category/SUV'
      responses:
        '201':
          description: Created
        '400': 
          description: User must be an admin
          content:
            application/json:
              schema:
                $ref: '#definitions/schemas/AdminError'
              examples:
                AdminError:
                  $ref: '#definitions/examples/AdminError'
        '401':
          description: Authentication problems
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#definitions/schemas/AuthError/InvalidToken'
                  - $ref: '#definitions/schemas/AuthError/UserNotExist'
              examples:
                InvalidToken:
                  $ref: '#definitions/examples/AuthError/InvalidToken'
                UserNotExist:
                  $ref: '#definitions/examples/AuthError/UserNotExist'
        '500':
          description: Category already exists
    get:
      tags:
        - Category
      summary: List all categories
      description: List all categories
      responses:
        200:
          description: Success
          content:
            application/json: 
              schema: 
                type: array
                items: 
                  type: object
                  properties : 
                    name: 
                      type: string
                    description: 
                      type: string
  /categories/import: 
    post:
      tags: 
        - Category
      summary: Upload a new category
      description: Upload a new category
      security: 
        - bearerAuth: []
      requestBody: 
        content:
          multipart/form-data:
            schema: 
              type: object
              properties: 
                file: 
                  type: string
                  format: binary
      responses: 
        201:
          description: Created
  /specifications:
    post:
      tags: 
        - Specifications
      summary: Create a specification
      description: Create a new specification
      security: 
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/definitions/schemas/Specifications'
      responses: 
        201: 
          description: Created
        500:
          description: Specification already exists
  /sessions:
    post:
      tags: 
        - Session
      summary: Authenticate a user
      description: Authenticate a user
      requestBody:
        content:
          application/json: 
            schema:
              $ref: '#/definitions/schemas/Sessions'
      responses:
        200: 
          description: OK
        400:
          description: Email or password incorrect!
  /users:
    post:
      tags:
        - User
      summary: Create a new user
      description: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                email:
                  type: string
                password:
                  type: string
                driver_license:
                  type: string
      responses:
        201:
          description: Created
  /users/avatar:
    patch:
      tags:
        - User
      summary: Add an avatar
      description: Add an avatar
      security: 
        - bearerAuth: []
      requestBody: 
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: 
                  type: string
                  format: binary
      responses:
        204:
          description: No Content
  /cars:
    post:
      tags:
        - Cars
      summary: Create a new Car
      description: Create a new Car
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#definitions/schemas/Cars'
            examples:
              Car:
                $ref: '#definitions/examples/Car'
                
      responses:
        201:
          description: Created
  /cars/available:
    get:
      tags: 
        - Cars
      summary: Get all cars available
      description: Get all cars available
      responses:
        '200':
          description: Created
  
      

definitions:
  schemas:
    Specifications: 
      type: object
      properties:
        name: 
          type: string
        description: 
          type: string
    Sessions:
      type: object
      properties:
        email: 
          type: string
          description: Email
        password:
          type: string
          description: Password
    Cars:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        daily_rate:
          type: number
        license_plate:
          type: string
        fine_amount:
          type: number
        brand:
          type: string
    AuthError:
      InvalidToken:
        type: object
        properties:
          message:
            type: string
      UserNotExist:
        type: object
        properties:
          message:
            type: string
    AdminError:
      type: object
      properties:
        message: 
          type: string
  
  examples:
    Car: 
      value:
        name: BMW i7
        description: Corre muito
        daily_rate: 220000
        license_plate: ADV-1226
        fine_amount: 22000
        brand: BMW
    Category:
      Sedan:
        value:
          name: Sedan
          description: Sedan car category
      SUV:
        value:
          name: SUV
          description: SUV car category
    AuthError:
      InvalidToken:
        value:
          message: Invalid token
      UserNotExist: 
        value:
          message: User does not exist
    AdminError:
      value:
        message: User is not an admin



components: 
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT